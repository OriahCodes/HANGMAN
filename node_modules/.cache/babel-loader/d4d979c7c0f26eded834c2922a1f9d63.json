{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oriah\\\\Desktop\\\\code\\\\js\\\\little_projects\\\\hangman\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Solution from './components/Solution';\nimport Score from './components/Score';\nimport Letters from './components/Letters';\nimport EndGame from './components/EndGame';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.newGame = () => {\n      let score = 100;\n      this.setState({\n        score: score,\n        letterStatus: this.generateLetterStatus(),\n        gameStatus: \"playing\" // solutionInd : this.chooseSolution()\n\n      });\n    };\n\n    this.selectLetter = letter => {\n      let letterStatus = this.state.letterStatus;\n      letterStatus[letter] = true;\n      this.setState({\n        letterStatus\n      });\n\n      if (this.checkSolution(letter)) {\n        this.addPoints();\n      } else {\n        this.takeOffPoints();\n      }\n    };\n\n    this.getScoreLevel = () => {\n      if (this.state.score >= 80) {\n        return \"high-score\";\n      } else if (this.state.score < 80 && this.state.score >= 50) {\n        return \"medium-score\";\n      } else {\n        return \"low-score\";\n      }\n    };\n\n    this.state = {\n      letterStatus: this.generateLetterStatus(),\n      solution: {\n        word: \"PHILLY\",\n        hint: \"She is blond and cute and likes to poop alot. Also, she used to be a puppy once\"\n      },\n      // solutions: [\n      //   {\n      //     word: \"PHILLY\",\n      //     hint: \"She is blond and cute and likes to poop alot. Also, she used to be a puppy once\"\n      //   },\n      //   {\n      //     word: \"CHEESE\",\n      //     hint: \"It's usually yellow. Oh, and nd it smells like cheese\"\n      //   }\n      // ],\n      solutionInd: this.chooseSolution(),\n      score: 100,\n      gameStatus: \"playing\"\n    };\n  }\n\n  generateLetterStatus() {\n    let letterStatus = {};\n\n    for (let i = 65; i < 91; i++) {\n      letterStatus[String.fromCharCode(i)] = false;\n    }\n\n    return letterStatus;\n  }\n\n  chooseSolution() {\n    // debugger\n    // console.log(this.state.solutionInd)\n    let solutionInd = Math.floor(Math.random() * 2);\n    return solutionInd;\n  }\n\n  checkSolution(letter) {\n    if (this.state.solution.word.indexOf(letter) > -1) {\n      return true;\n    }\n\n    return false;\n  }\n\n  takeOffPoints() {\n    this.setState({\n      score: this.state.score - 20\n    }, () => {\n      this.checkScore();\n    });\n  }\n\n  addPoints() {\n    this.setState({\n      score: this.state.score + 5\n    }, () => {\n      this.checkVictory();\n    });\n  }\n\n  checkScore() {\n    if (this.state.score <= 0) {\n      this.setState({\n        gameStatus: \"lose\"\n      });\n    }\n  }\n\n  checkVictory() {\n    // I really want to think how to compute this with o1\n    let word = this.state.solution.word.split(\"\");\n\n    for (let letter of word) {\n      if (!this.state.letterStatus[letter]) {\n        return false;\n      }\n    }\n\n    this.setState({\n      gameStatus: \"win\"\n    });\n    return true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.gameStatus === \"playing\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Score, {\n      score: this.state.score,\n      scoreLevel: this.getScoreLevel(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Solution, {\n      word: this.state.solution.word,\n      hint: this.state.solution.hint,\n      letterStatus: this.state.letterStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Letters, {\n      letterStatus: this.state.letterStatus,\n      selectLetter: this.selectLetter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(EndGame, {\n      win: this.state.gameStatus,\n      word: this.state.solution.word,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"new-game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.newGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Start New Game\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Oriah/Desktop/code/js/little_projects/hangman/src/App.js"],"names":["React","Component","Solution","Score","Letters","EndGame","App","constructor","newGame","score","setState","letterStatus","generateLetterStatus","gameStatus","selectLetter","letter","state","checkSolution","addPoints","takeOffPoints","getScoreLevel","solution","word","hint","solutionInd","chooseSolution","i","String","fromCharCode","Math","floor","random","indexOf","checkScore","checkVictory","split","render"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport './App.css';\nimport Solution from './components/Solution'\nimport Score from './components/Score'\nimport Letters from './components/Letters'\nimport EndGame from './components/EndGame'\n\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      letterStatus: this.generateLetterStatus(),\n      solution : {\n        word: \"PHILLY\",\n        hint: \"She is blond and cute and likes to poop alot. Also, she used to be a puppy once\"      \n      },\n      // solutions: [\n      //   {\n      //     word: \"PHILLY\",\n      //     hint: \"She is blond and cute and likes to poop alot. Also, she used to be a puppy once\"\n      //   },\n      //   {\n      //     word: \"CHEESE\",\n      //     hint: \"It's usually yellow. Oh, and nd it smells like cheese\"\n      //   }\n      // ],\n      solutionInd : this.chooseSolution(),\n      score: 100,\n      gameStatus: \"playing\"\n    }\n\n  }\n\n  newGame = () => {\n    let score = 100\n    this.setState({\n      score : score,\n      letterStatus : this.generateLetterStatus(),\n      gameStatus: \"playing\",\n      // solutionInd : this.chooseSolution()\n    })\n  }\n\n  generateLetterStatus () {\n    let letterStatus = {}\n    for (let i= 65; i < 91; i ++){\n      letterStatus[String.fromCharCode(i)] = false\n    }\n    return letterStatus\n  }\n\n  chooseSolution () {\n    // debugger\n    // console.log(this.state.solutionInd)\n    let solutionInd = Math.floor(Math.random() * 2)\n    return solutionInd\n  }\n\n  checkSolution (letter) {\n    if (this.state.solution.word.indexOf(letter) > -1){\n      return true\n    }\n    return false\n  }\n\n  selectLetter = (letter) => {\n    let letterStatus = this.state.letterStatus\n    letterStatus[letter] = true\n    this.setState({ letterStatus})\n\n    if (this.checkSolution(letter)){\n      this.addPoints()\n    }\n    else{\n      this.takeOffPoints()\n    }\n\n  }\n\n  takeOffPoints(){\n    this.setState({score : this.state.score - 20}, () => {\n      this.checkScore() \n    })\n  }\n\n  addPoints(){\n    this.setState({score : this.state.score + 5}, () => {\n      this.checkVictory()\n    })\n  }\n\n  checkScore(){\n    if(this.state.score <= 0) {this.setState ({gameStatus : \"lose\"}) }\n  }\n\n  checkVictory(){ // I really want to think how to compute this with o1\n    let word = this.state.solution.word.split(\"\")\n    for (let letter of word){\n      if (!this.state.letterStatus[letter]) { return false}\n    }\n    this.setState({gameStatus : \"win\"}) \n    return true\n  }\n\n  getScoreLevel = () => {\n    if (this.state.score >= 80){\n      return \"high-score\"\n    }\n    else if (this.state.score <80 && this.state.score >=50){\n      return \"medium-score\"\n    }\n    else{\n      return \"low-score\"\n    }\n  }\n\n  render(){\n    return (\n      <div>\n        {this.state.gameStatus === \"playing\"?      \n        <div>\n          <Score \n            score={this.state.score} \n            scoreLevel={this.getScoreLevel()}/>\n          <Solution \n            word={this.state.solution.word} \n            hint={this.state.solution.hint} \n            letterStatus={this.state.letterStatus}/>\n          <Letters \n            letterStatus={this.state.letterStatus} \n              selectLetter={this.selectLetter}/>\n        </div> :\n        <div>\n          <EndGame win={this.state.gameStatus} word={this.state.solution.word}/>\n        </div>}\n\n        <div className=\"new-game\">\n          <button onClick={this.newGame}>Start New Game</button>\n        </div>\n      </div>\n\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
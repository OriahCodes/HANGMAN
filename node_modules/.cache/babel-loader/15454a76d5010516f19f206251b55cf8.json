{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oriah\\\\Desktop\\\\code\\\\js\\\\little_projects\\\\hangman\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Solution from './components/Solution';\nimport Score from './components/Score';\nimport Letters from './components/Letters';\nimport EndGame from './components/EndGame';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.selectLetter = letter => {\n      let letterStatus = this.state.letterStatus;\n      letterStatus[letter] = true;\n      this.setState({\n        letterStatus\n      });\n\n      if (this.checkSolution(letter)) {\n        this.addPoints();\n      } else {\n        this.takeOffPoints();\n      }\n    };\n\n    this.getScoreLevel = () => {\n      if (this.state.score >= 80) {\n        return \"high-score\";\n      } else if (this.state.score < 80 && this.state.score >= 50) {\n        return \"medium-score\";\n      } else {\n        return \"low-score\";\n      }\n    };\n\n    this.state = {\n      letterStatus: this.generateLetterStatus(),\n      solution: {\n        word: \"PHILLY\",\n        hint: \"She is blond and cute and likes to poop alot. Also, she used to be a puppy once\"\n      },\n      score: 100,\n      gameStatus: \"playing\"\n    };\n  }\n\n  generateLetterStatus() {\n    let letterStatus = {};\n\n    for (let i = 65; i < 91; i++) {\n      letterStatus[String.fromCharCode(i)] = false;\n    }\n\n    return letterStatus;\n  }\n\n  checkSolution(letter) {\n    if (this.state.solution.word.indexOf(letter) > -1) {\n      return true;\n    }\n\n    return false;\n  }\n\n  takeOffPoints() {\n    this.setState({\n      score: this.state.score - 20\n    }, () => {\n      this.checkScore();\n      console.log();\n    });\n  }\n\n  addPoints() {\n    this.setState({\n      score: this.state.score + 5\n    });\n  }\n\n  checkScore() {\n    if (this.state.score <= 0) {\n      this.setState({\n        gameStatus: \"lose\"\n      });\n    }\n  }\n\n  render() {\n    return this.state.gameStatus === \"playing\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Score, {\n      score: this.state.score,\n      scoreLevel: this.getScoreLevel(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Solution, {\n      word: this.state.solution.word,\n      hint: this.state.solution.hint,\n      letterStatus: this.state.letterStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Letters, {\n      letterStatus: this.state.letterStatus,\n      selectLetter: this.selectLetter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(EndGame, {\n      win: this.state.gameStatus,\n      word: this.state.solution.word,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Oriah/Desktop/code/js/little_projects/hangman/src/App.js"],"names":["React","Component","Solution","Score","Letters","EndGame","App","constructor","selectLetter","letter","letterStatus","state","setState","checkSolution","addPoints","takeOffPoints","getScoreLevel","score","generateLetterStatus","solution","word","hint","gameStatus","i","String","fromCharCode","indexOf","checkScore","console","log","render"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport './App.css';\nimport Solution from './components/Solution'\nimport Score from './components/Score'\nimport Letters from './components/Letters'\nimport EndGame from './components/EndGame'\n\n\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      letterStatus: this.generateLetterStatus(),\n      solution: {\n        word: \"PHILLY\",\n        hint: \"She is blond and cute and likes to poop alot. Also, she used to be a puppy once\"\n      },\n      score: 100,\n      gameStatus: \"playing\"\n    }\n\n  }\n\n  generateLetterStatus () {\n    let letterStatus = {}\n    for (let i= 65; i < 91; i ++){\n      letterStatus[String.fromCharCode(i)] = false\n    }\n    return letterStatus\n  }\n\n  checkSolution (letter) {\n    if (this.state.solution.word.indexOf(letter) > -1){\n      return true\n    }\n    return false\n  }\n\n  selectLetter = (letter) => {\n    let letterStatus = this.state.letterStatus\n    letterStatus[letter] = true\n    this.setState({ letterStatus})\n\n    if (this.checkSolution(letter)){\n      this.addPoints()\n    }\n    else{\n      this.takeOffPoints()\n    }\n\n  }\n\n  takeOffPoints(){\n    this.setState({score : this.state.score - 20}, () => {\n      this.checkScore() \n      console.log()\n    })\n  }\n\n  addPoints(){\n    this.setState({score : this.state.score + 5})\n  }\n\n  checkScore(){\n    if(this.state.score <= 0) {this.setState ({gameStatus : \"lose\"}) }\n  }\n\n  getScoreLevel = () => {\n    if (this.state.score >= 80){\n      return \"high-score\"\n    }\n    else if (this.state.score <80 && this.state.score >=50){\n      return \"medium-score\"\n    }\n    else{\n      return \"low-score\"\n    }\n  }\n\n  render(){\n    return (\n      this.state.gameStatus === \"playing\"?\n      \n        <div>\n          <Score score={this.state.score} scoreLevel={this.getScoreLevel()}/>\n          <Solution word={this.state.solution.word} hint={this.state.solution.hint} letterStatus={this.state.letterStatus}/>\n          <Letters letterStatus={this.state.letterStatus} selectLetter={this.selectLetter}/>\n        </div> :\n        <div>\n          <EndGame win={this.state.gameStatus} word={this.state.solution.word}/>\n        </div>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}